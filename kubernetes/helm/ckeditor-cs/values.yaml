## Name of the secret containing container registry authentication data
imagePullSecrets:
  - name: docker-cke-cs-com

## Override for fullname template
nameOverride: ""

server:
  ## Name of the server component container
  name: server

  ## Number of desired collaboration server instances
  replicaCount: 2

  ## Collaboration server container image
  image:
    repository: docker.cke-cs.com/cs
    pullPolicy: IfNotPresent
    tag: "latest"

  ## Default health check configuration for collaboration server
  readinessProbe:
    httpGet:
      path: /health
      port: tcp
    initialDelaySeconds: 15
    periodSeconds: 5

  podAnnotations: {}

  podSecurityContext: {}

  securityContext: {}

  serviceAccount:
    ## Specifies whether a service account for collaboration server should be created
    create: false
    ## Annotations to add to the service account
    annotations: {}
    ## The name of the service account to use. If not set and create is true, a
    ## name is generated using the server fullname template
    name: ""

  secret:
    ## The name of the secret for collaboration server to use. If not set, a name is generated using the
    ## fullname template
    name: ""
    ## Whole list of container environment variables is accessible here
    ## https://ckeditor.com/docs/cs/latest/onpremises/cs-onpremises/installation/docker.html#docker-container-environment-variables
    ## Those mentioned below are absolute minimum to run the service
    data:
      DATABASE_HOST: ""
      DATABASE_USER: ""
      DATABASE_PASSWORD: ""
      REDIS_HOST: ""
      ENVIRONMENTS_MANAGEMENT_SECRET_KEY: ""
      LICENSE_KEY: ""
      STORAGE_DRIVER: ""
      STORAGE_LOCATION: ""

  service:
    type: ClusterIP
    port: 8000

  ingress:
    ## If true will create ingress rule to expose collaboration server from cluster
    enabled: false
    className: ""
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
      # nginx.ingress.kubernetes.io/proxy-body-size: 10m
      # nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
      # nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    hosts:
      - host: ckeditor-cs.organization.test
        paths:
          - path: /
    tls: []
    #  - secretName: ckeditor-cs-organization-test
    #    hosts:
    #      - ckeditor-cs.organization.test

  ## Default resource requirements for collaboration server
  resources:
    requests:
      cpu: 1000m
      memory: 512Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

worker:
  ## If false collaboration worker will not be installed
  ## https://ckeditor.com/docs/cs/latest/onpremises/cs-onpremises/worker.html
  enabled: false

  ## Name of the collaboration worker container
  name: worker

  ## Number of desired collaboration worker instances
  replicaCount: 1

  ## Collaboration worker container image
  image:
    repository: docker.cke-cs.com/cs-worker
    pullPolicy: IfNotPresent
    tag: "latest"

  podAnnotations: {}

  podSecurityContext: {}

  securityContext: {}

  serviceAccount:
    ## Specifies whether a service account for collaboration worker should be created
    create: false
    ## Annotations to add to the service account
    annotations: {}
    ## The name of the service account to use. If not set and create is true, a
    ## name is generated using the worker fullname template
    name: ""

  secret:
    name: ""
    ## List of required environment variables to pass to collaboration worker container
    data:
      DATABASE_HOST: ""
      DATABASE_USER: ""
      DATABASE_PASSWORD: ""
      REDIS_HOST: ""

  resources:
    requests:
      cpu: 1000m
      memory: 1024Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}
